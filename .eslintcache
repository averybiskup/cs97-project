[{"/Users/averybiskup/code/97/project/coursereview/src/reportWebVitals.js":"1","/Users/averybiskup/code/97/project/coursereview/src/CoursePage.js":"2","/Users/averybiskup/code/97/project/coursereview/src/getCourses.js":"3","/Users/averybiskup/code/97/project/coursereview/src/ReviewCard.js":"4","/Users/averybiskup/code/97/project/coursereview/src/CourseCard.js":"5","/Users/averybiskup/code/97/project/coursereview/src/index.js":"6","/Users/averybiskup/code/97/project/coursereview/src/Login.js":"7","/Users/averybiskup/code/97/project/coursereview/src/fetchCourses.js":"8","/Users/averybiskup/code/97/project/coursereview/src/postReview.js":"9","/Users/averybiskup/code/97/project/coursereview/src/AddCourse.js":"10","/Users/averybiskup/code/97/project/coursereview/src/fetchReviews.js":"11","/Users/averybiskup/code/97/project/coursereview/src/CreateReview.js":"12","/Users/averybiskup/code/97/project/coursereview/src/updateCourse.js":"13","/Users/averybiskup/code/97/project/coursereview/src/Router.js":"14","/Users/averybiskup/code/97/project/coursereview/src/App.js":"15","/Users/averybiskup/code/97/project/coursereview/src/CourseRenderer.js":"16","/Users/averybiskup/code/97/project/coursereview/src/loginPost.js":"17","/Users/averybiskup/code/97/project/coursereview/src/checkUser.js":"18"},{"size":362,"mtime":1611981164822,"results":"19","hashOfConfig":"20"},{"size":2548,"mtime":1613793779391,"results":"21","hashOfConfig":"20"},{"size":1766,"mtime":1613172057263,"results":"22","hashOfConfig":"20"},{"size":552,"mtime":1613796381233,"results":"23","hashOfConfig":"20"},{"size":734,"mtime":1613796382016,"results":"24","hashOfConfig":"20"},{"size":537,"mtime":1612503249347,"results":"25","hashOfConfig":"20"},{"size":1140,"mtime":1613801591131,"results":"26","hashOfConfig":"20"},{"size":939,"mtime":1613198265629,"results":"27","hashOfConfig":"20"},{"size":985,"mtime":1613799377654,"results":"28","hashOfConfig":"20"},{"size":339,"mtime":1613004031257,"results":"29","hashOfConfig":"20"},{"size":1381,"mtime":1613172450100,"results":"30","hashOfConfig":"20"},{"size":2898,"mtime":1613719262413,"results":"31","hashOfConfig":"20"},{"size":948,"mtime":1613105421907,"results":"32","hashOfConfig":"20"},{"size":896,"mtime":1613799003609,"results":"33","hashOfConfig":"20"},{"size":1012,"mtime":1613796970933,"results":"34","hashOfConfig":"20"},{"size":1917,"mtime":1613717985601,"results":"35","hashOfConfig":"20"},{"size":468,"mtime":1613800543311,"results":"36","hashOfConfig":"20"},{"size":557,"mtime":1613801557576,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"8mghhg",{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/averybiskup/code/97/project/coursereview/src/reportWebVitals.js",[],["84","85"],"/Users/averybiskup/code/97/project/coursereview/src/CoursePage.js",["86","87","88"],"// Component for each course\n// Will also have components:\n\nimport { useLocation, Link } from \"react-router-dom\";\nimport { useState } from 'react'\nimport './App.css'\nimport getCourses from './getCourses.js'\nimport postReview from './postReview.js'\nimport ReviewCard from './ReviewCard.js'\nimport CreateReview from './CreateReview.js'\nimport fetchCourses from './fetchCourses.js'\n\nlet RenderReviews = (props) => {\n\n    // Getting courses object from localStorage\n    const courses = JSON.parse(window.localStorage.getItem('courses'))\n    const reviews = courses[props.loc]['reviews']\n\n    // Making sure that a course has at least 1 review, otherwise\n    // displays this message\n    if (!reviews) {\n        return (\n            <div>\n                Course has no reviews.\n            </div>\n        )\n    }\n\n    // Turning object with reviews, into list of reviews\n    const reviewsList = Object.keys(reviews).map((id) => {\n       return reviews[id]\n    })\n    \n    return (\n        <div className=\"reviews\">\n            <div>{props.message}</div>\n            <h1>Reviews:</h1>\n            {reviewsList.map((review) => {\n                return <ReviewCard key={review.id} review={review} />\n            })}\n        </div>\n    )\n}\n\nlet CoursePage = (props) => {\n\n    // This allows us to rerender dom from child component\n    const [message, setMessage] = useState('')\n\n    // Getting the course_id from url\n    const location = useLocation()\n    const url_param = location.pathname.split('/')[location.pathname.split('/').length - 1]\n\n    // Checking that the localStorage has courses\n    if (window.localStorage.getItem('courses') === null) {\n        return (<div>Something went wrong</div>)\n    } \n\n    // Getting courses from local storage\n    const courses = JSON.parse(window.localStorage.getItem('courses'))\n    const current_course = courses[url_param]\n\n    return (\n        <div className=\"course-page\">\n            <Link className=\"home-button\" to='/cs97-project/'>Home</Link>\n            <div className = 'title'>Title: {current_course['title']}</div>\n            <div className = 'author'>Author: {current_course['author']}</div>\n            <div className = 'rating'>Rating: {current_course['course_rating']}</div>\n            <div> Submit a review:\n                <CreateReview course={current_course} updateMessage={setMessage} />\n            </div>\n            <div className='review-cards'>\n                <RenderReviews loc={url_param} message={message} />\n            </div>\n        </div>\n    );\n}\n\nexport default CoursePage;\n","/Users/averybiskup/code/97/project/coursereview/src/getCourses.js",[],["89","90"],"/Users/averybiskup/code/97/project/coursereview/src/ReviewCard.js",[],"/Users/averybiskup/code/97/project/coursereview/src/CourseCard.js",["91","92"],"// Cards that show up on main page.\n// Should contain:\n// Name of Course\n// Author of Course (maybe)\n// Course Image\n// Link to the course page\n\nimport { useLocation, Link } from \"react-router-dom\";\nimport './App.css'\n\nlet CourseCard = (props) => {\n    const path_to_course = \"/cs97-project/course/\" + props.course_id\n    return (\n        <div className=\"course-card\">\n                {<div><img className=\"image_id\" src={'https://media.geeksforgeeks.org/wp-content/cdn-uploads/titleShadow-1024x341.png'} alt=\"test image\"/></div>}\n                <div className=\"course_title\">{props.name}</div>\n                <Link className=\"course_link\" to={path_to_course} >Course Page</Link>\n        </div>\n    );\n}\n\nexport default CourseCard;\n","/Users/averybiskup/code/97/project/coursereview/src/index.js",["93"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Router from './Router.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/Users/averybiskup/code/97/project/coursereview/src/Login.js",["94","95","96","97"],"/Users/averybiskup/code/97/project/coursereview/src/fetchCourses.js",[],"/Users/averybiskup/code/97/project/coursereview/src/postReview.js",["98"],"// Function for posting a review to the db\n\n// Does not update localStorage because it's updated after\n// a call to this function, as they are both called upon\n// a new review being added\n\n\nimport axios from 'axios'\n\nconst postReview = async (course_id, body, author, title, rating) => {\n\n    // Creating the review based on function arguments\n    const review = {\n        'course_id': course_id,\n        'body': body,\n        'author': author,\n        'title': title,\n        'rating': rating\n    }\n\n    // Turning review into a string to post iit\n    const json = JSON.stringify(review)\n\n    console.log('Posting review')\n    const p = await axios.post('/api/postreview', json, { headers: { 'Content-Type': 'application/json' }}) \n        .then((res) => {\n            console.log(res.status)\n        })\n        .catch(err => {\n            console.log(err.response.data)\n            window.alert('Post failed. Server is probably down. ' + err)\n        })\n}\n\nexport default postReview\n","/Users/averybiskup/code/97/project/coursereview/src/AddCourse.js",[],"/Users/averybiskup/code/97/project/coursereview/src/fetchReviews.js",["99"],"// Function for fetching a singular course\n// used when a new review is added in order to update the render\n// with the newly added review.\n// This also takes less power than grabbing all the courses,\n// so using this when you can is more efficient\n//\n// This also updates the localStorage\n\nimport axios from 'axios'\nimport updateCourse from './updateCourse.js'\n\nconst fetchReviews = async (course_id) => {\n\n    // We can use /api/fetchreviews because we have a proxy in package.json which\n    // points to the server address (localhost:8000)\n    const data = await axios.get('/api/fetchreviews/' + course_id)\n        .then(res => {\n            const courses = JSON.parse(window.localStorage.getItem('courses'))\n            courses[course_id] = res.data\n            const reviews = res.data.reviews\n            console.log('Updating reviews')\n            \n            let new_rating = 0\n\n            Object.keys(reviews).map((key) => {\n               new_rating += Number(reviews[key].rating)\n            })\n\n\n            updateCourse(course_id, new_rating/5)\n\n            window.localStorage.clear()\n            window.localStorage.setItem('courses', JSON.stringify(courses))\n\n            return res.data\n        })\n        .catch(err => {\n            console.log(err)\n            window.alert('Error fetching reviews') \n        })\n    return data\n\n}\n\nexport default fetchReviews\n","/Users/averybiskup/code/97/project/coursereview/src/CreateReview.js",["100","101","102","103"],"// Component for the input section of the reviews page\n\n\nimport './App.css'\nimport { useState } from 'react'\nimport postReview from './postReview.js'\nimport fetchCourses from './fetchCourses.js'\nimport fetchReviews from './fetchReviews.js'\nimport ReviewCard from './ReviewCard.js'\n\n// Function for handling the submit button on the form\n// Returns true if form was valid\nconst handleSubmit = (e, course_id, author, title, body, rating, setMessage) => {\n    e.preventDefault()\n\n    // Checking for valid form data\n    if (title.length <= 0) { \n        alert('No title')\n    } else if (body.length <= 0) {\n        alert('No body')\n    } else if (rating == 0) {\n        alert('Rating can not be 0')\n    } else {\n        if (author.length == 0) {\n            author = 'Anon'\n        }\n\n        // Posting review\n        postReview(course_id, body, author, title, rating)\n\n        // Rerendering parent component\n        setMessage('Preparing review...')\n\n        // Fetching courses and updating localStorage\n        //fetchCourses()\n        fetchReviews(course_id)\n\n        // Timeout so we have data before rerendering parent component\n        setTimeout(() => {\n\n            setMessage('Review added!')\n        }, 5000)\n        return true\n    }\n    return false\n}\n\n\n\nconst CreateReview = (props) => {\n\n    // State variables that are changed when form gets input\n    const [author, setAuthor] = useState('Anon')\n    const [title, setTitle] = useState('')\n    const [body, setBody] = useState('')\n    const [rating, setRating] = useState(0)\n    const course_id = props.course.id\n\n    return (\n        <div className='create-review'>\n            <form id='createreview' onSubmit={(e) => { \n                if (handleSubmit(e, course_id, author, title, body, rating, props.updateMessage)) {\n                    // Resetting form inputs\n                    setAuthor('Anon')\n                    setTitle('')\n                    setBody('')\n                    setRating(0)\n                }\n            }}>\n                \n                <input type='text' name='author' placeholder='name' value={author} onChange={(e) => setAuthor(e.target.value)}/>\n                <input type='text' name='title' placeholder='title (required)' value={title} onChange={(e) => setTitle(e.target.value)} />\n                <input type='text' name='body' placeholder='review (required)' value={body} onChange={(e) => setBody(e.target.value)} />\n                <select value={rating} onChange={(e) => setRating(e.target.value)}>\n                    <option>0</option>\n                    <option>1</option>\n                    <option>2</option>\n                    <option>3</option>\n                    <option>4</option>\n                    <option>5</option>\n                </select>\n                <input type='submit' value='Submit' />\n            </form>\n        </div>\n    );\n}\n\nexport default CreateReview;\n","/Users/averybiskup/code/97/project/coursereview/src/updateCourse.js",[],"/Users/averybiskup/code/97/project/coursereview/src/Router.js",["104"],"// Component for routing. Renders components based on given path.\n\n\nimport React from 'react';\nimport App from './App.js';\nimport CoursePage from './CoursePage.js';\nimport AddCourse from './AddCourse.js';\nimport Login from './Login.js';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from 'react-router-dom';\n\nlet MainRouter = () => {\n\n    return (\n        <div className=\"Router\">\n            <Router>\n                <Switch>\n                    <Route exact path='/cs97-project/' component={ App } />\n                    <Route exact path='/cs97-project/course/:id' component={ CoursePage } />\n                    <Route exact path='/cs97-project/addcourse' component={ AddCourse } />\n                    <Route exact path='/cs97-project/login' component={ Login } />\n                </Switch>\n            </Router>\n        </div>\n    );\n}\n\nexport default MainRouter;\n","/Users/averybiskup/code/97/project/coursereview/src/App.js",["105"],"// Component for the home page of the app\n\nimport './App.css';\nimport CourseRenderer from './CourseRenderer'\nimport fetchCourses from './fetchCourses.js'\nimport fetchReviews from './fetchReviews.js'\nimport { useState, useEffect } from 'react'\n\nconst App = () => {\n    const [isLoading, setLoading] = useState(true);\n    const [courses, setCourses] = useState({});\n\n    // Getting data from fetchCourse function\n    useEffect(() => {\n\n        // Getting course data asynchronously from fetchCourses\n        const grabCourses = async () => {\n            const data = await fetchCourses();\n            setCourses(data);\n            setLoading(false)\n        }\n        grabCourses()\n\n    }, [])\n\n    // Render a loading div to show before data has arrived \n    if (isLoading) {\n        return <div body></div>\n    }\n\n    return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <CourseRenderer courses={courses} />\n          </header>\n        </div>\n    );\n}\n\nexport default App;\n","/Users/averybiskup/code/97/project/coursereview/src/CourseRenderer.js",["106","107","108"],"/Users/averybiskup/code/97/project/coursereview/src/loginPost.js",["109"],"/Users/averybiskup/code/97/project/coursereview/src/checkUser.js",[],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":7,"column":8,"nodeType":"116","messageId":"117","endLine":7,"endColumn":18},{"ruleId":"114","severity":1,"message":"118","line":8,"column":8,"nodeType":"116","messageId":"117","endLine":8,"endColumn":18},{"ruleId":"114","severity":1,"message":"119","line":11,"column":8,"nodeType":"116","messageId":"117","endLine":11,"endColumn":20},{"ruleId":"110","replacedBy":"120"},{"ruleId":"112","replacedBy":"121"},{"ruleId":"114","severity":1,"message":"122","line":8,"column":10,"nodeType":"116","messageId":"117","endLine":8,"endColumn":21},{"ruleId":"123","severity":1,"message":"124","line":15,"column":23,"nodeType":"125","endLine":15,"endColumn":155},{"ruleId":"114","severity":1,"message":"126","line":4,"column":8,"nodeType":"116","messageId":"117","endLine":4,"endColumn":11},{"ruleId":"114","severity":1,"message":"127","line":2,"column":20,"nodeType":"116","messageId":"117","endLine":2,"endColumn":29},{"ruleId":"114","severity":1,"message":"128","line":3,"column":8,"nodeType":"116","messageId":"117","endLine":3,"endColumn":14},{"ruleId":"114","severity":1,"message":"129","line":4,"column":8,"nodeType":"116","messageId":"117","endLine":4,"endColumn":17},{"ruleId":"114","severity":1,"message":"130","line":7,"column":7,"nodeType":"116","messageId":"117","endLine":7,"endColumn":20},{"ruleId":"114","severity":1,"message":"131","line":25,"column":11,"nodeType":"116","messageId":"117","endLine":25,"endColumn":12},{"ruleId":"132","severity":1,"message":"133","line":25,"column":44,"nodeType":"134","messageId":"135","endLine":25,"endColumn":46},{"ruleId":"114","severity":1,"message":"119","line":7,"column":8,"nodeType":"116","messageId":"117","endLine":7,"endColumn":20},{"ruleId":"114","severity":1,"message":"136","line":9,"column":8,"nodeType":"116","messageId":"117","endLine":9,"endColumn":18},{"ruleId":"137","severity":1,"message":"138","line":21,"column":23,"nodeType":"139","messageId":"140","endLine":21,"endColumn":25},{"ruleId":"137","severity":1,"message":"138","line":24,"column":27,"nodeType":"139","messageId":"140","endLine":24,"endColumn":29},{"ruleId":"114","severity":1,"message":"141","line":13,"column":5,"nodeType":"116","messageId":"117","endLine":13,"endColumn":9},{"ruleId":"114","severity":1,"message":"142","line":6,"column":8,"nodeType":"116","messageId":"117","endLine":6,"endColumn":20},{"ruleId":"143","severity":1,"message":"144","line":46,"column":17,"nodeType":"125","endLine":46,"endColumn":34},{"ruleId":"143","severity":1,"message":"144","line":47,"column":17,"nodeType":"125","endLine":47,"endColumn":20},{"ruleId":"143","severity":1,"message":"144","line":48,"column":17,"nodeType":"125","endLine":48,"endColumn":20},{"ruleId":"114","severity":1,"message":"131","line":7,"column":11,"nodeType":"116","messageId":"117","endLine":7,"endColumn":12},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"no-unused-vars","'getCourses' is defined but never used.","Identifier","unusedVar","'postReview' is defined but never used.","'fetchCourses' is defined but never used.",["145"],["146"],"'useLocation' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'App' is defined but never used.","'useEffect' is defined but never used.","'sha256' is defined but never used.","'loginPost' is defined but never used.","'handleSubmbit' is assigned a value but never used.","'p' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'ReviewCard' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Link' is defined but never used.","'fetchReviews' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]