[{"/Users/averybiskup/code/97/project/coursereview/src/index.js":"1","/Users/averybiskup/code/97/project/coursereview/src/components/Router.js":"2","/Users/averybiskup/code/97/project/coursereview/src/helper/reportWebVitals.js":"3","/Users/averybiskup/code/97/project/coursereview/src/components/App.js":"4","/Users/averybiskup/code/97/project/coursereview/src/components/CoursePage.js":"5","/Users/averybiskup/code/97/project/coursereview/src/components/AddCourse.js":"6","/Users/averybiskup/code/97/project/coursereview/src/components/Signup.js":"7","/Users/averybiskup/code/97/project/coursereview/src/components/Login.js":"8","/Users/averybiskup/code/97/project/coursereview/src/components/Profile.js":"9","/Users/averybiskup/code/97/project/coursereview/src/helper/fetchCourses.js":"10","/Users/averybiskup/code/97/project/coursereview/src/helper/fetchReviews.js":"11","/Users/averybiskup/code/97/project/coursereview/src/helper/postReview.js":"12","/Users/averybiskup/code/97/project/coursereview/src/helper/getCourses.js":"13","/Users/averybiskup/code/97/project/coursereview/src/components/ReviewCard.js":"14","/Users/averybiskup/code/97/project/coursereview/src/helper/addUser.js":"15","/Users/averybiskup/code/97/project/coursereview/src/helper/checkUser.js":"16","/Users/averybiskup/code/97/project/coursereview/src/helper/signout.js":"17","/Users/averybiskup/code/97/project/coursereview/src/helper/loginPost.js":"18","/Users/averybiskup/code/97/project/coursereview/src/components/CreateReview.js":"19","/Users/averybiskup/code/97/project/coursereview/src/components/CourseRenderer.js":"20","/Users/averybiskup/code/97/project/coursereview/src/components/RenderReviews.js":"21","/Users/averybiskup/code/97/project/coursereview/src/helper/updateCourse.js":"22","/Users/averybiskup/code/97/project/coursereview/src/components/CourseCard.js":"23","/Users/averybiskup/code/97/project/coursereview/src/helper/viewProfile.js":"24"},{"size":572,"mtime":1614709960426,"results":"25","hashOfConfig":"26"},{"size":1159,"mtime":1614709687064,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":1611981164822,"results":"28","hashOfConfig":"26"},{"size":1035,"mtime":1614709719335,"results":"29","hashOfConfig":"26"},{"size":2651,"mtime":1614709745093,"results":"30","hashOfConfig":"26"},{"size":346,"mtime":1614709580415,"results":"31","hashOfConfig":"26"},{"size":3599,"mtime":1614709826823,"results":"32","hashOfConfig":"26"},{"size":2755,"mtime":1614709660146,"results":"33","hashOfConfig":"26"},{"size":1224,"mtime":1614709789387,"results":"34","hashOfConfig":"26"},{"size":859,"mtime":1614709224664,"results":"35","hashOfConfig":"26"},{"size":1605,"mtime":1614145780592,"results":"36","hashOfConfig":"26"},{"size":985,"mtime":1613799377654,"results":"37","hashOfConfig":"26"},{"size":2354,"mtime":1614110325355,"results":"38","hashOfConfig":"26"},{"size":1218,"mtime":1614709799505,"results":"39","hashOfConfig":"26"},{"size":604,"mtime":1613866875952,"results":"40","hashOfConfig":"26"},{"size":470,"mtime":1613865947163,"results":"41","hashOfConfig":"26"},{"size":265,"mtime":1614146656374,"results":"42","hashOfConfig":"26"},{"size":764,"mtime":1614146114646,"results":"43","hashOfConfig":"26"},{"size":3707,"mtime":1614709776509,"results":"44","hashOfConfig":"26"},{"size":2525,"mtime":1614709631532,"results":"45","hashOfConfig":"26"},{"size":925,"mtime":1614709937319,"results":"46","hashOfConfig":"26"},{"size":948,"mtime":1614115356003,"results":"47","hashOfConfig":"26"},{"size":748,"mtime":1614709594536,"results":"48","hashOfConfig":"26"},{"size":178,"mtime":1614563061532,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},"wb46ja",{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/averybiskup/code/97/project/coursereview/src/index.js",["111"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport App from './components/App';\nimport Router from './components/Router.js';\nimport reportWebVitals from './helper/reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/Users/averybiskup/code/97/project/coursereview/src/components/Router.js",["112"],"// Component for routing. Renders components based on given path.\n\n\nimport React from 'react';\nimport App from './App.js';\nimport CoursePage from './CoursePage.js';\nimport AddCourse from './AddCourse.js';\nimport Login from './Login.js';\nimport Signup from './Signup.js';\nimport Profile from './Profile.js';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from 'react-router-dom';\n\nlet MainRouter = () => {\n\n    return (\n        <div className=\"Router\">\n            <Router>\n                <Switch>\n                    <Route exact path='/cs97-project/' component={ App } />\n                    <Route exact path='/cs97-project/course/:id' component={ CoursePage } />\n                    <Route exact path='/cs97-project/addcourse' component={ AddCourse } />\n                    <Route exact path='/cs97-project/login' component={ Login } ignoreScrollPosition />\n                    <Route exact path='/cs97-project/signup' component={ Signup } />\n                    <Route exact path='/cs97-project/profile' component={ Profile } />\n                </Switch>\n            </Router>\n        </div>\n    );\n}\n\nexport default MainRouter;\n","/Users/averybiskup/code/97/project/coursereview/src/helper/reportWebVitals.js",[],"/Users/averybiskup/code/97/project/coursereview/src/components/App.js",["113"],"// Component for the home page of the app\n\nimport '../style/App.css';\nimport CourseRenderer from './CourseRenderer'\nimport fetchCourses from '../helper/fetchCourses.js'\nimport fetchReviews from '../helper/fetchReviews.js'\nimport { useState, useEffect } from 'react'\n\nconst App = () => {\n    const [isLoading, setLoading] = useState(true);\n    const [courses, setCourses] = useState({});\n\n    // Getting data from fetchCourse function\n    useEffect(() => {\n\n        // Getting course data asynchronously from fetchCourses\n        const grabCourses = async () => {\n            const data = await fetchCourses();\n            setCourses(data);\n            setLoading(false)\n        }\n        grabCourses()\n\n    }, [])\n\n    // Render a loading div to show before data has arrived \n    if (isLoading) {\n        return <div body></div>\n    }\n\n    return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <CourseRenderer courses={courses} />\n          </header>\n        </div>\n    );\n}\n\nexport default App;\n","/Users/averybiskup/code/97/project/coursereview/src/components/CoursePage.js",["114","115","116","117"],"// Component for each course\n// Will also have components:\n\nimport { useLocation, Link } from \"react-router-dom\";\nimport { useState, useEffect } from 'react'\nimport '../style/App.css'\nimport getCourses from '../helper/getCourses.js'\nimport postReview from '../helper/postReview.js'\nimport ReviewCard from './ReviewCard.js'\nimport CreateReview from './CreateReview.js'\nimport fetchCourses from '../helper/fetchCourses.js'\nimport RenderReviews from './RenderReviews'\n\nlet CoursePage = (props) => {\n\n    // Scrolls to top of page\n    useEffect(() => {\n        window.scrollTo(0, 0)\n    }, [])\n\n    // This allows us to rerender dom from child component\n    const [message, setMessage] = useState('')\n\n    // Getting the course_id from url\n    const location = useLocation()\n    const url_param = location.pathname.split('/')[location.pathname.split('/').length - 1]\n\n    // Checking that the localStorage has courses\n    if (window.localStorage.getItem('courses') === null) {\n        return (<div>Something went wrong</div>)\n    } \n\n    // Getting courses from local storage\n    const courses = JSON.parse(window.localStorage.getItem('courses'))\n    const current_course = courses[url_param]\n    console.log(\"courses\",courses);\n    let createReview\n    //the login is not working, because the user name is not set. nothing in the data base for the user name\n    const username = window.localStorage.getItem('username')\n    //replace (username) with (true) for review testing\n    if (username) {\n        createReview = <CreateReview course={current_course} updateMessage={setMessage} />\n    } else {\n        createReview = \n        <div>\n            <Link className=\"course-page-login\" to='/cs97-project/login'>Login to leave a review</Link>\n        </div>\n    }\n\n\n    return (\n\n        <div className=\"course-page\">\n            {/*removed login option because it already appears on page*/}\n            {/*<Link className=\"login\" to='/cs97-project/login'>Login</Link>*/}\n            <Link className=\"home-button\" to='/cs97-project/'>Home</Link>\n            <br/><br/>\n            <div className=\"create-review\">\n                <div className = 'create-review-author'><b>Author:</b> {current_course['author']}</div>\n                <div className = 'create-review-title'><b>Current Course:</b> {current_course['title']}</div>\n                {/*<div className = 'rating'>Rating: {current_course['course_rating']}</div>*/}\n                {createReview}\n            </div>\n\n            <div className='review-cards'>\n                <RenderReviews loc={url_param} message={message} />\n            </div>\n        </div>\n    );\n}\n\nexport default CoursePage;\n","/Users/averybiskup/code/97/project/coursereview/src/components/AddCourse.js",[],"/Users/averybiskup/code/97/project/coursereview/src/components/Signup.js",[],"/Users/averybiskup/code/97/project/coursereview/src/components/Login.js",[],"/Users/averybiskup/code/97/project/coursereview/src/components/Profile.js",["118","119","120","121"],"import React from 'react'\nimport { Link } from 'react-router-dom'\nimport signout from '../helper/signout.js'\nimport loginPost from '../helper/loginPost.js'\n\nconst loggedInUser = localStorage.getItem('username');\n\nclass Profile extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            username:localStorage.getItem('username')\n        }\n    }\n    render() {\n        return (\n            <div>\n                <div>\n                <button type='button' className='a' onClick={() => signout()}>Sign out</button>\n                    <div>\n                        <img style={{width:\"160px\", height:\"160px\", borderRadius:\"80px\"}}\n                        src=\"https://images.unsplash.com/flagged/photo-1578848151039-b8916d7c1c34?ixid=MXwxMjA3fDB8MHxzZWFyY2h8Mzd8fHBlcnNvbnxlbnwwfDJ8MHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\" \n                        />\n                    </div>\n                    <div>\n                        <h4>{this.state.username}</h4>\n                    </div>\n                    <div>\n                        <h4>Reviews: </h4>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Profile\n","/Users/averybiskup/code/97/project/coursereview/src/helper/fetchCourses.js",[],"/Users/averybiskup/code/97/project/coursereview/src/helper/fetchReviews.js",["122"],"// Function for fetching a singular course\n// used when a new review is added in order to update the render\n// with the newly added review.\n// This also takes less power than grabbing all the courses,\n// so using this when you can is more efficient\n//\n// This also updates the localStorage\n\nimport axios from 'axios'\nimport updateCourse from './updateCourse.js'\n\nconst fetchReviews = async (course_id) => {\n\n    // We can use /api/fetchreviews because we have a proxy in package.json which\n    // points to the server address (localhost:8000)\n    const data = await axios.get('/api/fetchreviews/' + course_id)\n        .then(res => {\n            const courses = JSON.parse(window.localStorage.getItem('courses'))\n            courses[course_id] = res.data\n            const reviews = res.data.reviews\n            console.log('Updating reviews')\n            window.localStorage.removeItem('courses')\n            window.localStorage.setItem('courses', JSON.stringify(courses))\n            \n            let new_rating = 0\n            let count = 0\n            Object.keys(reviews).map((key) => {\n               new_rating += Number(reviews[key].rating)\n               count++\n            })\n            \n            // divide by number of reviews represented by count\n            new_rating = new_rating/count\n            new_rating = new_rating.toFixed(2)\n            updateCourse(course_id, new_rating) \n\n            return res.data\n        })\n        .catch(err => {\n            console.log(err)\n            window.alert('Error fetching reviews') \n        })\n    return data\n\n}\n\nexport default fetchReviews\n","/Users/averybiskup/code/97/project/coursereview/src/helper/postReview.js",["123"],"// Function for posting a review to the db\n\n// Does not update localStorage because it's updated after\n// a call to this function, as they are both called upon\n// a new review being added\n\n\nimport axios from 'axios'\n\nconst postReview = async (course_id, body, author, title, rating) => {\n\n    // Creating the review based on function arguments\n    const review = {\n        'course_id': course_id,\n        'body': body,\n        'author': author,\n        'title': title,\n        'rating': rating\n    }\n\n    // Turning review into a string to post iit\n    const json = JSON.stringify(review)\n\n    console.log('Posting review')\n    const p = await axios.post('/api/postreview', json, { headers: { 'Content-Type': 'application/json' }}) \n        .then((res) => {\n            console.log(res.status)\n        })\n        .catch(err => {\n            console.log(err.response.data)\n            window.alert('Post failed. Server is probably down. ' + err)\n        })\n}\n\nexport default postReview\n","/Users/averybiskup/code/97/project/coursereview/src/helper/getCourses.js",[],"/Users/averybiskup/code/97/project/coursereview/src/components/ReviewCard.js",[],"/Users/averybiskup/code/97/project/coursereview/src/helper/addUser.js",["124"],"import axios from 'axios'\n\nconst addUser = async (username, password) => {\n\n    const data = {\n        'username': username,\n        'hash': password\n    }\n\n    const json = JSON.stringify(data)\n\n    const p = await axios.post('/signup', json, { headers: { 'Content-Type': 'application/json' }}) \n        .then(res => {\n            console.log(res.status)\n            window.location.replace('/cs97-project/login')\n        })\n\n        .catch(err => {\n            console.log(err.response.data)\n            window.alert('Post failed. Server is probably down. ' + err)\n        })\n}\n\nexport default addUser\n","/Users/averybiskup/code/97/project/coursereview/src/helper/checkUser.js",["125"],"import axios from 'axios'\n\nconst checkUser = async (username) => {\n\n    const data = {\n        'username': username\n    }\n\n    const json = JSON.stringify(data)\n\n    const p = await axios.get('/checkuser/' + username) \n        .then((res) => {\n            return res\n        })\n        .catch(err => {\n            console.log(err.response.data)\n            window.alert('Post failed. Server is probably down. ' + err)\n        })\n    return p\n}\n\nexport default checkUser\n","/Users/averybiskup/code/97/project/coursereview/src/helper/signout.js",[],"/Users/averybiskup/code/97/project/coursereview/src/helper/loginPost.js",["126","127"],"import axios from 'axios'\n\nconst loginPost = async (username, password, browserHistory) => {\n\n    const data = {\n        'username': username,\n        'hash': password\n    }\n\n    const json = JSON.stringify(data)\n\n    const p = await axios.post('/login', json, { headers: { 'Content-Type': 'application/json' }}) \n        .then((res) => {\n            console.log(res.status)\n            if (res.status == 200) {\n                window.localStorage.setItem('isAuthenticated', true)\n                window.localStorage.setItem('username', username)\n                browserHistory.goBack()\n            }\n        })\n        .catch(err => {\n            console.log(err)\n            window.alert('Incorrect username or password.')\n        })\n}\n\nexport default loginPost\n","/Users/averybiskup/code/97/project/coursereview/src/components/CreateReview.js",["128","129","130"],"// Component for the input section of the reviews page\n\n\nimport '../style/App.css'\nimport { useState } from 'react'\nimport postReview from '../helper/postReview.js'\nimport fetchCourses from '../helper/fetchCourses.js'\nimport fetchReviews from '../helper/fetchReviews.js'\nimport ReviewCard from './ReviewCard.js'\nimport StarRatings2 from 'react-star-ratings'\n\n// Function for handling the submit button on the form\n// Returns true if form was valid\nconst handleSubmit = (e, course_id, title, body, rating, setMessage) => {\n    e.preventDefault()\n\n    // Checking for valid form data\n    if (title.length <= 0) { \n        alert('No title')\n    } else if (body.length <= 0) {\n        alert('No body')\n    } else if (rating == 0) {\n        alert('Rating can not be 0')\n    } else {\n\n        const author = window.localStorage.getItem('username')\n\n        // change (!author) to (false) for review testing\n        if (!author) {\n            alert('You are not signed in');\n\n            window.location.replace('/cs97-project/login')\n        } else {\n\n            // Posting review\n            postReview(course_id, body, author, title, rating)\n\n            // Rerendering parent component\n            setMessage('Preparing review...')\n\n            // Fetching courses and updating localStorage\n            // Then rerendering via setMessage\n            fetchReviews(course_id)\n                .then(() => {\n                    setMessage('Review added!')\n                })\n\n            return true\n        }\n    }\n    return false\n}\n\n\n\nconst CreateReview = (props) => {\n\n    // State variables that are changed when form gets input\n    const [title, setTitle] = useState('')\n    const [body, setBody] = useState('')\n    const [rating, setRating] = useState(0)\n    const course_id = props.course.id\n\n    return (\n\n        <div className='create-review-input'>\n            <form id='create-review-form'\n                onSubmit={(e) => {\n                    if (handleSubmit(e, course_id, title, body, rating, props.updateMessage)) {\n                        // Resetting form inputs\n                        setTitle('')\n                        setBody('')\n                        setRating(0)\n                    }\n                }}\n            >\n                <label>\n                <StarRatings2\n                    rating={rating}\n                    starRatedColor=\"orange\"\n                    starHoverColor=\"orange\"\n                    isSelectable={true}\n                    numberOfStars={5}\n                    name='rating'\n                    starDimension=\"32px\"\n                    starSpacing=\"5px\"\n                    changeRating={(rating)=>setRating(rating)}\n                />\n                    <span className=\"rating-text\">select your rating</span>\n                </label>\n\n                <label>\n                <input\n                    type='text'\n                    name='title'\n                    placeholder='title (required)'\n                    value={title}\n                    onChange={(e) => setTitle(e.target.value)}\n                    className={\"title-input\"}\n                />\n                </label>\n\n\n                <label>\n                <textarea\n                    type='text'\n                    name='body'\n                    placeholder='review (required)'\n                    value={body} onChange={(e) => setBody(e.target.value)}\n                    className={\"body-input\"}\n                />\n                </label>\n\n                <label>\n                <input type='submit' value='Submit' className={\"submit-review\"} />\n                </label>\n                <br/>\n\n            </form>\n        </div>\n    );\n}\n\nexport default CreateReview;\n","/Users/averybiskup/code/97/project/coursereview/src/components/CourseRenderer.js",["131"],"// Component for rendering the cards on the main page.\n// Also contains the code for the search bar\n// Uses js-search which is for searching for matches in a list of objects\n\n\nimport {useState} from 'react';\nimport CourseCard from './CourseCard.js'\nimport * as JsSearch from 'js-search'\nimport { Link } from 'react-router-dom'\nimport signout from '../helper/signout.js'\nimport viewProfile from '../helper/viewProfile.js'\nimport '../style/CourseRenderer.css'\n\n// Returns all objects in the courses list that match the query\n//                     array  , string\nconst filterCourses = (courses, query) => {\n\n    // Makes sure query isn't empty\n    if (!query)\n        return courses\n\n    // Creating search\n    var search = new JsSearch.Search('id')\n    search.addIndex('title')\n    search.addIndex('tags')\n\n    search.addDocuments(courses)\n    const result = search.search(query)\n\n    // Returning courses that match the search\n    return courses.filter((course) => {\n        return result.includes(course); \n    })\n};\n\n\n\nconst CourseRenderer = (props) => {\n    const [query, setQuery] = useState('');\n    const coursesObj = props.courses\n    const courses = Object.keys(coursesObj).map((id) => {\n       return coursesObj[id]\n    })\n\n    const filteredCourses = filterCourses(courses, query)\n\n    let loginButton\n    let isLoggedIn = false;\n    if (window.localStorage.getItem('isAuthenticated')) { \n        loginButton = <button type='button' className='a' onClick={() => signout()}>Sign out</button>\n        isLoggedIn = true\n    } else {\n        loginButton = <Link className='a' to='/cs97-project/login'>Login</Link>\n        isLoggedIn = false\n    }\n    \n    return (\n        <div>\n            <div className=\"top_bar\">\n                {loginButton}\n                <Link to='/cs97-project' className=\"title\">WEBPAGE TITLE</Link>\n                <Link to='/cs97-project/addcourse'>Add Course</Link>\n                {isLoggedIn && <Link to='/cs97-project/profile'>Profile</Link>}\n            </div>\n            <div className=\"middle-page\">\n                <br></br>\n                <input type=\"text\"  className=\"middle-input\" id=\"course-search\" placeholder=\"Search for Course...\" name=\"s\" onChange={e => setQuery(e.target.value)}/>\n            </div>\n\n            <div id=\"wrapper\">\n                {filteredCourses.map(course => (\n                     <CourseCard key={course.id} name={course.title} course_id={course.id} />\n                ))}\n            </div>\n\n\n        </div>\n    )\n}\nexport default CourseRenderer\n","/Users/averybiskup/code/97/project/coursereview/src/components/RenderReviews.js",[],"/Users/averybiskup/code/97/project/coursereview/src/helper/updateCourse.js",[],"/Users/averybiskup/code/97/project/coursereview/src/components/CourseCard.js",["132","133"],"// Cards that show up on main page.\n// Should contain:\n// Name of Course\n// Author of Course (maybe)\n// Course Image\n// Link to the course page\n\nimport { useLocation, Link } from \"react-router-dom\";\nimport '../style/CourseCard.css'\n\nlet CourseCard = (props) => {\n    const path_to_course = \"/cs97-project/course/\" + props.course_id\n    return (\n        <div className=\"course-card\">\n                {<div><img className=\"image_id\" src={'https://media.geeksforgeeks.org/wp-content/cdn-uploads/titleShadow-1024x341.png'} alt=\"test image\"/></div>}\n                <div className=\"course_title\">{props.name}</div>\n                <Link className=\"course_link\" to={path_to_course} >Course Page</Link>\n        </div>\n    );\n}\n\nexport default CourseCard;\n","/Users/averybiskup/code/97/project/coursereview/src/helper/viewProfile.js",[],{"ruleId":"134","severity":1,"message":"135","line":4,"column":8,"nodeType":"136","messageId":"137","endLine":4,"endColumn":11},{"ruleId":"134","severity":1,"message":"138","line":15,"column":5,"nodeType":"136","messageId":"137","endLine":15,"endColumn":9},{"ruleId":"134","severity":1,"message":"139","line":6,"column":8,"nodeType":"136","messageId":"137","endLine":6,"endColumn":20},{"ruleId":"134","severity":1,"message":"140","line":7,"column":8,"nodeType":"136","messageId":"137","endLine":7,"endColumn":18},{"ruleId":"134","severity":1,"message":"141","line":8,"column":8,"nodeType":"136","messageId":"137","endLine":8,"endColumn":18},{"ruleId":"134","severity":1,"message":"142","line":9,"column":8,"nodeType":"136","messageId":"137","endLine":9,"endColumn":18},{"ruleId":"134","severity":1,"message":"143","line":11,"column":8,"nodeType":"136","messageId":"137","endLine":11,"endColumn":20},{"ruleId":"134","severity":1,"message":"138","line":2,"column":10,"nodeType":"136","messageId":"137","endLine":2,"endColumn":14},{"ruleId":"134","severity":1,"message":"144","line":4,"column":8,"nodeType":"136","messageId":"137","endLine":4,"endColumn":17},{"ruleId":"134","severity":1,"message":"145","line":6,"column":7,"nodeType":"136","messageId":"137","endLine":6,"endColumn":19},{"ruleId":"146","severity":1,"message":"147","line":21,"column":25,"nodeType":"148","endLine":23,"endColumn":27},{"ruleId":"149","severity":1,"message":"150","line":27,"column":44,"nodeType":"151","messageId":"152","endLine":27,"endColumn":46},{"ruleId":"134","severity":1,"message":"153","line":25,"column":11,"nodeType":"136","messageId":"137","endLine":25,"endColumn":12},{"ruleId":"134","severity":1,"message":"153","line":12,"column":11,"nodeType":"136","messageId":"137","endLine":12,"endColumn":12},{"ruleId":"134","severity":1,"message":"154","line":9,"column":11,"nodeType":"136","messageId":"137","endLine":9,"endColumn":15},{"ruleId":"134","severity":1,"message":"153","line":12,"column":11,"nodeType":"136","messageId":"137","endLine":12,"endColumn":12},{"ruleId":"155","severity":1,"message":"156","line":15,"column":28,"nodeType":"157","messageId":"158","endLine":15,"endColumn":30},{"ruleId":"134","severity":1,"message":"143","line":7,"column":8,"nodeType":"136","messageId":"137","endLine":7,"endColumn":20},{"ruleId":"134","severity":1,"message":"142","line":9,"column":8,"nodeType":"136","messageId":"137","endLine":9,"endColumn":18},{"ruleId":"155","severity":1,"message":"156","line":22,"column":23,"nodeType":"157","messageId":"158","endLine":22,"endColumn":25},{"ruleId":"134","severity":1,"message":"159","line":11,"column":8,"nodeType":"136","messageId":"137","endLine":11,"endColumn":19},{"ruleId":"134","severity":1,"message":"160","line":8,"column":10,"nodeType":"136","messageId":"137","endLine":8,"endColumn":21},{"ruleId":"161","severity":1,"message":"162","line":15,"column":23,"nodeType":"148","endLine":15,"endColumn":155},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'fetchReviews' is defined but never used.","'getCourses' is defined but never used.","'postReview' is defined but never used.","'ReviewCard' is defined but never used.","'fetchCourses' is defined but never used.","'loginPost' is defined but never used.","'loggedInUser' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'p' is assigned a value but never used.","'json' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'viewProfile' is defined but never used.","'useLocation' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop."]