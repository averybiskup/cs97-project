[{"/Users/averybiskup/code/97/project/coursereview/src/reportWebVitals.js":"1","/Users/averybiskup/code/97/project/coursereview/src/CoursePage.js":"2","/Users/averybiskup/code/97/project/coursereview/src/getCourses.js":"3","/Users/averybiskup/code/97/project/coursereview/src/ReviewCard.js":"4","/Users/averybiskup/code/97/project/coursereview/src/CourseCard.js":"5","/Users/averybiskup/code/97/project/coursereview/src/index.js":"6","/Users/averybiskup/code/97/project/coursereview/src/Login.js":"7","/Users/averybiskup/code/97/project/coursereview/src/fetchCourses.js":"8","/Users/averybiskup/code/97/project/coursereview/src/postReview.js":"9","/Users/averybiskup/code/97/project/coursereview/src/AddCourse.js":"10","/Users/averybiskup/code/97/project/coursereview/src/fetchReviews.js":"11","/Users/averybiskup/code/97/project/coursereview/src/CreateReview.js":"12","/Users/averybiskup/code/97/project/coursereview/src/updateCourse.js":"13","/Users/averybiskup/code/97/project/coursereview/src/Router.js":"14","/Users/averybiskup/code/97/project/coursereview/src/App.js":"15","/Users/averybiskup/code/97/project/coursereview/src/CourseRenderer.js":"16","/Users/averybiskup/code/97/project/coursereview/src/loginPost.js":"17","/Users/averybiskup/code/97/project/coursereview/src/checkUser.js":"18","/Users/averybiskup/code/97/project/coursereview/src/Signup.js":"19"},{"size":362,"mtime":1611981164822,"results":"20","hashOfConfig":"21"},{"size":2548,"mtime":1613793779391,"results":"22","hashOfConfig":"21"},{"size":1766,"mtime":1613172057263,"results":"23","hashOfConfig":"21"},{"size":552,"mtime":1613796381233,"results":"24","hashOfConfig":"21"},{"size":734,"mtime":1613796382016,"results":"25","hashOfConfig":"21"},{"size":537,"mtime":1612503249347,"results":"26","hashOfConfig":"21"},{"size":1198,"mtime":1613804056282,"results":"27","hashOfConfig":"21"},{"size":939,"mtime":1613198265629,"results":"28","hashOfConfig":"21"},{"size":985,"mtime":1613799377654,"results":"29","hashOfConfig":"21"},{"size":339,"mtime":1613004031257,"results":"30","hashOfConfig":"21"},{"size":1381,"mtime":1613801986984,"results":"31","hashOfConfig":"21"},{"size":2898,"mtime":1613719262413,"results":"32","hashOfConfig":"21"},{"size":948,"mtime":1613105421907,"results":"33","hashOfConfig":"21"},{"size":1015,"mtime":1613804372890,"results":"34","hashOfConfig":"21"},{"size":1012,"mtime":1613802787553,"results":"35","hashOfConfig":"21"},{"size":1917,"mtime":1613717985601,"results":"36","hashOfConfig":"21"},{"size":549,"mtime":1613802780549,"results":"37","hashOfConfig":"21"},{"size":506,"mtime":1613802348546,"results":"38","hashOfConfig":"21"},{"size":1516,"mtime":1613804543741,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"8mghhg",{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/averybiskup/code/97/project/coursereview/src/reportWebVitals.js",[],["85","86"],"/Users/averybiskup/code/97/project/coursereview/src/CoursePage.js",["87","88","89"],"// Component for each course\n// Will also have components:\n\nimport { useLocation, Link } from \"react-router-dom\";\nimport { useState } from 'react'\nimport './App.css'\nimport getCourses from './getCourses.js'\nimport postReview from './postReview.js'\nimport ReviewCard from './ReviewCard.js'\nimport CreateReview from './CreateReview.js'\nimport fetchCourses from './fetchCourses.js'\n\nlet RenderReviews = (props) => {\n\n    // Getting courses object from localStorage\n    const courses = JSON.parse(window.localStorage.getItem('courses'))\n    const reviews = courses[props.loc]['reviews']\n\n    // Making sure that a course has at least 1 review, otherwise\n    // displays this message\n    if (!reviews) {\n        return (\n            <div>\n                Course has no reviews.\n            </div>\n        )\n    }\n\n    // Turning object with reviews, into list of reviews\n    const reviewsList = Object.keys(reviews).map((id) => {\n       return reviews[id]\n    })\n    \n    return (\n        <div className=\"reviews\">\n            <div>{props.message}</div>\n            <h1>Reviews:</h1>\n            {reviewsList.map((review) => {\n                return <ReviewCard key={review.id} review={review} />\n            })}\n        </div>\n    )\n}\n\nlet CoursePage = (props) => {\n\n    // This allows us to rerender dom from child component\n    const [message, setMessage] = useState('')\n\n    // Getting the course_id from url\n    const location = useLocation()\n    const url_param = location.pathname.split('/')[location.pathname.split('/').length - 1]\n\n    // Checking that the localStorage has courses\n    if (window.localStorage.getItem('courses') === null) {\n        return (<div>Something went wrong</div>)\n    } \n\n    // Getting courses from local storage\n    const courses = JSON.parse(window.localStorage.getItem('courses'))\n    const current_course = courses[url_param]\n\n    return (\n        <div className=\"course-page\">\n            <Link className=\"home-button\" to='/cs97-project/'>Home</Link>\n            <div className = 'title'>Title: {current_course['title']}</div>\n            <div className = 'author'>Author: {current_course['author']}</div>\n            <div className = 'rating'>Rating: {current_course['course_rating']}</div>\n            <div> Submit a review:\n                <CreateReview course={current_course} updateMessage={setMessage} />\n            </div>\n            <div className='review-cards'>\n                <RenderReviews loc={url_param} message={message} />\n            </div>\n        </div>\n    );\n}\n\nexport default CoursePage;\n","/Users/averybiskup/code/97/project/coursereview/src/getCourses.js",[],["90","91"],"/Users/averybiskup/code/97/project/coursereview/src/ReviewCard.js",[],"/Users/averybiskup/code/97/project/coursereview/src/CourseCard.js",["92","93"],"// Cards that show up on main page.\n// Should contain:\n// Name of Course\n// Author of Course (maybe)\n// Course Image\n// Link to the course page\n\nimport { useLocation, Link } from \"react-router-dom\";\nimport './App.css'\n\nlet CourseCard = (props) => {\n    const path_to_course = \"/cs97-project/course/\" + props.course_id\n    return (\n        <div className=\"course-card\">\n                {<div><img className=\"image_id\" src={'https://media.geeksforgeeks.org/wp-content/cdn-uploads/titleShadow-1024x341.png'} alt=\"test image\"/></div>}\n                <div className=\"course_title\">{props.name}</div>\n                <Link className=\"course_link\" to={path_to_course} >Course Page</Link>\n        </div>\n    );\n}\n\nexport default CourseCard;\n","/Users/averybiskup/code/97/project/coursereview/src/index.js",["94"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Router from './Router.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/Users/averybiskup/code/97/project/coursereview/src/Login.js",["95"],"/Users/averybiskup/code/97/project/coursereview/src/fetchCourses.js",[],"/Users/averybiskup/code/97/project/coursereview/src/postReview.js",["96"],"// Function for posting a review to the db\n\n// Does not update localStorage because it's updated after\n// a call to this function, as they are both called upon\n// a new review being added\n\n\nimport axios from 'axios'\n\nconst postReview = async (course_id, body, author, title, rating) => {\n\n    // Creating the review based on function arguments\n    const review = {\n        'course_id': course_id,\n        'body': body,\n        'author': author,\n        'title': title,\n        'rating': rating\n    }\n\n    // Turning review into a string to post iit\n    const json = JSON.stringify(review)\n\n    console.log('Posting review')\n    const p = await axios.post('/api/postreview', json, { headers: { 'Content-Type': 'application/json' }}) \n        .then((res) => {\n            console.log(res.status)\n        })\n        .catch(err => {\n            console.log(err.response.data)\n            window.alert('Post failed. Server is probably down. ' + err)\n        })\n}\n\nexport default postReview\n","/Users/averybiskup/code/97/project/coursereview/src/AddCourse.js",[],"/Users/averybiskup/code/97/project/coursereview/src/fetchReviews.js",["97"],"/Users/averybiskup/code/97/project/coursereview/src/CreateReview.js",["98","99","100","101"],"// Component for the input section of the reviews page\n\n\nimport './App.css'\nimport { useState } from 'react'\nimport postReview from './postReview.js'\nimport fetchCourses from './fetchCourses.js'\nimport fetchReviews from './fetchReviews.js'\nimport ReviewCard from './ReviewCard.js'\n\n// Function for handling the submit button on the form\n// Returns true if form was valid\nconst handleSubmit = (e, course_id, author, title, body, rating, setMessage) => {\n    e.preventDefault()\n\n    // Checking for valid form data\n    if (title.length <= 0) { \n        alert('No title')\n    } else if (body.length <= 0) {\n        alert('No body')\n    } else if (rating == 0) {\n        alert('Rating can not be 0')\n    } else {\n        if (author.length == 0) {\n            author = 'Anon'\n        }\n\n        // Posting review\n        postReview(course_id, body, author, title, rating)\n\n        // Rerendering parent component\n        setMessage('Preparing review...')\n\n        // Fetching courses and updating localStorage\n        //fetchCourses()\n        fetchReviews(course_id)\n\n        // Timeout so we have data before rerendering parent component\n        setTimeout(() => {\n\n            setMessage('Review added!')\n        }, 5000)\n        return true\n    }\n    return false\n}\n\n\n\nconst CreateReview = (props) => {\n\n    // State variables that are changed when form gets input\n    const [author, setAuthor] = useState('Anon')\n    const [title, setTitle] = useState('')\n    const [body, setBody] = useState('')\n    const [rating, setRating] = useState(0)\n    const course_id = props.course.id\n\n    return (\n        <div className='create-review'>\n            <form id='createreview' onSubmit={(e) => { \n                if (handleSubmit(e, course_id, author, title, body, rating, props.updateMessage)) {\n                    // Resetting form inputs\n                    setAuthor('Anon')\n                    setTitle('')\n                    setBody('')\n                    setRating(0)\n                }\n            }}>\n                \n                <input type='text' name='author' placeholder='name' value={author} onChange={(e) => setAuthor(e.target.value)}/>\n                <input type='text' name='title' placeholder='title (required)' value={title} onChange={(e) => setTitle(e.target.value)} />\n                <input type='text' name='body' placeholder='review (required)' value={body} onChange={(e) => setBody(e.target.value)} />\n                <select value={rating} onChange={(e) => setRating(e.target.value)}>\n                    <option>0</option>\n                    <option>1</option>\n                    <option>2</option>\n                    <option>3</option>\n                    <option>4</option>\n                    <option>5</option>\n                </select>\n                <input type='submit' value='Submit' />\n            </form>\n        </div>\n    );\n}\n\nexport default CreateReview;\n","/Users/averybiskup/code/97/project/coursereview/src/updateCourse.js",[],"/Users/averybiskup/code/97/project/coursereview/src/Router.js",["102"],"/Users/averybiskup/code/97/project/coursereview/src/App.js",["103"],"/Users/averybiskup/code/97/project/coursereview/src/CourseRenderer.js",["104","105","106"],"/Users/averybiskup/code/97/project/coursereview/src/loginPost.js",["107"],"/Users/averybiskup/code/97/project/coursereview/src/checkUser.js",["108"],"/Users/averybiskup/code/97/project/coursereview/src/Signup.js",["109"],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":7,"column":8,"nodeType":"116","messageId":"117","endLine":7,"endColumn":18},{"ruleId":"114","severity":1,"message":"118","line":8,"column":8,"nodeType":"116","messageId":"117","endLine":8,"endColumn":18},{"ruleId":"114","severity":1,"message":"119","line":11,"column":8,"nodeType":"116","messageId":"117","endLine":11,"endColumn":20},{"ruleId":"110","replacedBy":"120"},{"ruleId":"112","replacedBy":"121"},{"ruleId":"114","severity":1,"message":"122","line":8,"column":10,"nodeType":"116","messageId":"117","endLine":8,"endColumn":21},{"ruleId":"123","severity":1,"message":"124","line":15,"column":23,"nodeType":"125","endLine":15,"endColumn":155},{"ruleId":"114","severity":1,"message":"126","line":4,"column":8,"nodeType":"116","messageId":"117","endLine":4,"endColumn":11},{"ruleId":"114","severity":1,"message":"127","line":2,"column":20,"nodeType":"116","messageId":"117","endLine":2,"endColumn":29},{"ruleId":"114","severity":1,"message":"128","line":25,"column":11,"nodeType":"116","messageId":"117","endLine":25,"endColumn":12},{"ruleId":"129","severity":1,"message":"130","line":25,"column":44,"nodeType":"131","messageId":"132","endLine":25,"endColumn":46},{"ruleId":"114","severity":1,"message":"119","line":7,"column":8,"nodeType":"116","messageId":"117","endLine":7,"endColumn":20},{"ruleId":"114","severity":1,"message":"133","line":9,"column":8,"nodeType":"116","messageId":"117","endLine":9,"endColumn":18},{"ruleId":"134","severity":1,"message":"135","line":21,"column":23,"nodeType":"136","messageId":"137","endLine":21,"endColumn":25},{"ruleId":"134","severity":1,"message":"135","line":24,"column":27,"nodeType":"136","messageId":"137","endLine":24,"endColumn":29},{"ruleId":"114","severity":1,"message":"138","line":14,"column":5,"nodeType":"116","messageId":"117","endLine":14,"endColumn":9},{"ruleId":"114","severity":1,"message":"139","line":6,"column":8,"nodeType":"116","messageId":"117","endLine":6,"endColumn":20},{"ruleId":"140","severity":1,"message":"141","line":46,"column":17,"nodeType":"125","endLine":46,"endColumn":34},{"ruleId":"140","severity":1,"message":"141","line":47,"column":17,"nodeType":"125","endLine":47,"endColumn":20},{"ruleId":"140","severity":1,"message":"141","line":48,"column":17,"nodeType":"125","endLine":48,"endColumn":20},{"ruleId":"114","severity":1,"message":"128","line":12,"column":11,"nodeType":"116","messageId":"117","endLine":12,"endColumn":12},{"ruleId":"114","severity":1,"message":"142","line":9,"column":11,"nodeType":"116","messageId":"117","endLine":9,"endColumn":15},{"ruleId":"114","severity":1,"message":"127","line":2,"column":20,"nodeType":"116","messageId":"117","endLine":2,"endColumn":29},"no-native-reassign",["143"],"no-negated-in-lhs",["144"],"no-unused-vars","'getCourses' is defined but never used.","Identifier","unusedVar","'postReview' is defined but never used.","'fetchCourses' is defined but never used.",["143"],["144"],"'useLocation' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'App' is defined but never used.","'useEffect' is defined but never used.","'p' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'ReviewCard' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Link' is defined but never used.","'fetchReviews' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'json' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]