{"version":3,"sources":["CourseCard.js","CourseRenderer.js","getCourses.js","fetchCourses.js","updateCourse.js","fetchReviews.js","App.js","postReview.js","ReviewCard.js","CreateReview.js","CoursePage.js","AddCourse.js","loginPost.js","Login.js","checkUser.js","addUser.js","Signup.js","Router.js","reportWebVitals.js","index.js"],"names":["CourseCard","props","path_to_course","course_id","className","src","alt","name","to","CourseRenderer","useState","query","setQuery","coursesObj","courses","filteredCourses","search","JsSearch","addIndex","addDocuments","result","filter","course","includes","filterCourses","Object","keys","map","id","class","type","placeholder","onChange","e","target","value","title","getCourses","0","1","2","fetchCourses","a","axios","get","then","res","console","log","window","localStorage","clear","setItem","JSON","stringify","data","catch","err","updateCourse","new_rating","info","json","post","headers","alert","fetchReviews","parse","getItem","reviews","key","Number","rating","App","isLoading","setLoading","setCourses","useEffect","grabCourses","body","postReview","author","review","status","response","ReviewCard","rows","cols","CreateReview","setAuthor","setTitle","setBody","setRating","onSubmit","setMessage","preventDefault","length","setTimeout","handleSubmit","updateMessage","RenderReviews","loc","reviewsList","message","CoursePage","location","useLocation","url_param","pathname","split","current_course","AddCourse","onClick","loginPost","username","password","replace","Login","setUsername","setPassword","sha256","repeat","checkUser","p","addUser","Signup","color","toString","document","getElementById","style","backgroundColor","borderColor","ype","MainRouter","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","Router"],"mappings":"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","file":"static/js/main.16bf9db0.chunk.js","sourcesContent":["// Cards that show up on main page.\n// Should contain:\n// Name of Course\n// Author of Course (maybe)\n// Course Image\n// Link to the course page\n\nimport { useLocation, Link } from \"react-router-dom\";\nimport './App.css'\n\nlet CourseCard = (props) => {\n    const path_to_course = \"/cs97-project/course/\" + props.course_id\n    return (\n        <div className=\"course-card\">\n                {<div><img className=\"image_id\" src={'https://media.geeksforgeeks.org/wp-content/cdn-uploads/titleShadow-1024x341.png'} alt=\"test image\"/></div>}\n                <div className=\"course_title\">{props.name}</div>\n                <Link className=\"course_link\" to={path_to_course} >Course Page</Link>\n        </div>\n    );\n}\n\nexport default CourseCard;\n","// Component for rendering the cards on the main page.\n// Also contains the code for the search bar\n// Uses js-search which is for searching for matches in a list of objects\n\n\nimport {useState} from 'react';\nimport CourseCard from './CourseCard.js'\nimport * as JsSearch from 'js-search'\nimport { Link } from 'react-router-dom'\n\n// Returns all objects in the courses list that match the query\n//                     array  , string\nconst filterCourses = (courses, query) => {\n\n    // Makes sure query isn't empty\n    if (!query)\n        return courses\n\n    // Creating search\n    var search = new JsSearch.Search('id')\n    search.addIndex('title')\n    search.addIndex('tags')\n\n    search.addDocuments(courses)\n    const result = search.search(query)\n\n    // Returning courses that match the search\n    return courses.filter((course) => {\n        return result.includes(course); \n    })\n};\n\n\n\nconst CourseRenderer = (props) => {\n    const [query, setQuery] = useState('');\n    const coursesObj = props.courses\n    const courses = Object.keys(coursesObj).map((id) => {\n       return coursesObj[id]\n    })\n\n    const filteredCourses = filterCourses(courses, query)\n    \n    return (\n        <div>\n            <div className=\"top_bar\">\n                <Link className=\"login\" to='/cs97-project/login'>Login</Link>\n                <a class=\"title\">WEBPAGE TITLE</a>\n                <a>Add Course</a>\n                <a>About Us</a>\n            </div>\n            <div className=\"middle-page\">\n                <div class=\"middle-text\">Search for Courses Here</div>\n                <br></br>\n                <input type=\"text\"  class=\"middle-input\" id=\"course-search\" placeholder=\"Search for Course...\" name=\"s\" onChange={e => setQuery(e.target.value)}/>\n            </div>\n\n            <div id=\"wrapper\">\n                {filteredCourses.map(course => (\n                     <CourseCard key={course.id} name={course.title} course_id={course.id} />\n                ))}\n            </div>\n\n\n        </div>\n    )\n}\nexport default CourseRenderer\n","// Function for getting courses, later this will fetch from server\n\nconst getCourses = () => {\n\n    let courses = {\n        '0': { \n        'id': 0,\n        'title': 'React Native',\n        'author': 'Joe',\n        'tags': ['React', 'React Native'],\n        'rating': 50,\n        'reviews': {\n            0: {\n                'id': 0,\n                'course_id': 0,\n                'body': 'This is a great course!',\n                'author': 'Anon',\n                'title': 'Awesome course!',\n                'rating': 100\n                },\n            1: {\n                'id': 1,\n                'course_id': 0,\n                'body': 'This is a great course!',\n                'author': 'Anon',\n                'title': 'Awesome course!',\n                'rating': 100\n                }\n            } \n        },\n        '1': {\n        'id': 1,\n        'title': 'Python',\n        'author': 'Spud',\n        'tags': ['Python'],\n        'rating': 78,\n        'reviews': {\n            1: {\n                'id': 1,\n                'course_id': 1,\n                'body': 'This is a great course!',\n                'author': 'Anon',\n                'title': 'Awesome course!',\n                'rating': 100\n                }\n            } \n        },\n        '2': {\n        'id': 2,\n        'title': 'Node.js',\n        'author': 'Natalie',\n        'tags': ['Node', 'Node.js', 'Javascript'],\n        'rating': 86,\n        'reviews': {\n            2: {\n                'id': 2,\n                'course_id': 2,\n                'body': 'This is a great course!',\n                'author': 'Anon',\n                'title': 'Awesome course!',\n                'rating': 100\n                }\n            }\n        }\n    }\n    return courses\n}\nexport default getCourses\n","// Fetching data from the server\n// NOTE: fetches entire database, be careful with this, and use\n// fetchReviews when you can to fetch a single course\n\nimport axios from 'axios'\nimport getCourses from './getCourses.js'\n\nconst fetchCourses = async () => {\n\n    // We can use /api/test because we have a proxy in package.json which\n    // points to the server address (localhost:8000)\n    const data = await axios.get('/api/getcourses')\n        .then(res => {\n            console.log('Got data')\n            window.localStorage.clear()\n            window.localStorage.setItem('courses', JSON.stringify(res.data))\n            return res.data\n        })\n        .catch(err => {\n            console.log('Server error')\n            window.localStorage.clear()\n            window.localStorage.setItem('courses', JSON.stringify(getCourses()))\n            return getCourses()\n            \n        })\n    return data\n\n}\n\nexport default fetchCourses\n","// Function for updating a course's rating\n// Currently this is only called when a new review is added\n//\n// This does not update the localStorage so may take time to\n// be updated.\n\n\nimport axios from 'axios'\n\nconst updateCourse = async (course_id, new_rating) => {\n\n    // We can use /api/updatecourse because we have a proxy in package.json which\n    // points to the server address (localhost:8000)\n    const info = {\n        'course_id': course_id,\n        'new_rating': new_rating\n    }\n\n    const json = JSON.stringify(info)\n\n    console.log('Updating course')\n    const data = await axios.post('/api/updatecourse', json, { headers: { 'Content-Type': 'application/json' }})\n        .then(res => {\n            console.log('Course updated')\n            return res.data\n        })\n        .catch(err => {\n            console.log(err)\n            window.alert('Error updating rating') \n        })\n    return data\n\n}\n\nexport default updateCourse\n","// Function for fetching a singular course\n// used when a new review is added in order to update the render\n// with the newly added review.\n// This also takes less power than grabbing all the courses,\n// so using this when you can is more efficient\n//\n// This also updates the localStorage\n\nimport axios from 'axios'\nimport updateCourse from './updateCourse.js'\n\nconst fetchReviews = async (course_id) => {\n\n    // We can use /api/fetchreviews because we have a proxy in package.json which\n    // points to the server address (localhost:8000)\n    const data = await axios.get('/api/fetchreviews/' + course_id)\n        .then(res => {\n            const courses = JSON.parse(window.localStorage.getItem('courses'))\n            courses[course_id] = res.data\n            const reviews = res.data.reviews\n            console.log('Updating reviews')\n            \n            let new_rating = 0\n\n            Object.keys(reviews).map((key) => {\n               new_rating += Number(reviews[key].rating)\n            })\n\n\n            updateCourse(course_id, new_rating/5)\n\n            window.localStorage.clear()\n            window.localStorage.setItem('courses', JSON.stringify(courses))\n\n            return res.data\n        })\n        .catch(err => {\n            console.log(err)\n            window.alert('Error fetching reviews') \n        })\n    return data\n\n}\n\nexport default fetchReviews\n","// Component for the home page of the app\n\nimport './App.css';\nimport CourseRenderer from './CourseRenderer'\nimport fetchCourses from './fetchCourses.js'\nimport fetchReviews from './fetchReviews.js'\nimport { useState, useEffect } from 'react'\n\nconst App = () => {\n    const [isLoading, setLoading] = useState(true);\n    const [courses, setCourses] = useState({});\n\n    // Getting data from fetchCourse function\n    useEffect(() => {\n\n        // Getting course data asynchronously from fetchCourses\n        const grabCourses = async () => {\n            const data = await fetchCourses();\n            setCourses(data);\n            setLoading(false)\n        }\n        grabCourses()\n\n    }, [])\n\n    // Render a loading div to show before data has arrived \n    if (isLoading) {\n        return <div body></div>\n    }\n\n    return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <CourseRenderer courses={courses} />\n          </header>\n        </div>\n    );\n}\n\nexport default App;\n","// Function for posting a review to the db\n\n// Does not update localStorage because it's updated after\n// a call to this function, as they are both called upon\n// a new review being added\n\n\nimport axios from 'axios'\n\nconst postReview = async (course_id, body, author, title, rating) => {\n\n    // Creating the review based on function arguments\n    const review = {\n        'course_id': course_id,\n        'body': body,\n        'author': author,\n        'title': title,\n        'rating': rating\n    }\n\n    // Turning review into a string to post iit\n    const json = JSON.stringify(review)\n\n    console.log('Posting review')\n    const p = await axios.post('/api/postreview', json, { headers: { 'Content-Type': 'application/json' }}) \n        .then((res) => {\n            console.log(res.status)\n        })\n        .catch(err => {\n            console.log(err.response.data)\n            window.alert('Post failed. Server is probably down. ' + err)\n        })\n}\n\nexport default postReview\n","import './App.css'\n\nlet ReviewCard = (props) => {\n    return (\n        <div className='review'>\n            <div className='title'>Title: {props.review.title}</div>\n            <div className='author'>Author: {props.review.author}</div>\n            <div className='rating'>Rating: {props.review.rating}</div>\n            <div className='body'>Body: \n              <textarea id=\"body\" name=\"w3review\" rows=\"4\" cols=\"80\">\n                {props.review.body}\n             </textarea>\n            </div>\n        </div>\n    );\n}\n\nexport default ReviewCard;\n","// Component for the input section of the reviews page\n\n\nimport './App.css'\nimport { useState } from 'react'\nimport postReview from './postReview.js'\nimport fetchCourses from './fetchCourses.js'\nimport fetchReviews from './fetchReviews.js'\nimport ReviewCard from './ReviewCard.js'\n\n// Function for handling the submit button on the form\n// Returns true if form was valid\nconst handleSubmit = (e, course_id, author, title, body, rating, setMessage) => {\n    e.preventDefault()\n\n    // Checking for valid form data\n    if (title.length <= 0) { \n        alert('No title')\n    } else if (body.length <= 0) {\n        alert('No body')\n    } else if (rating == 0) {\n        alert('Rating can not be 0')\n    } else {\n        if (author.length == 0) {\n            author = 'Anon'\n        }\n\n        // Posting review\n        postReview(course_id, body, author, title, rating)\n\n        // Rerendering parent component\n        setMessage('Preparing review...')\n\n        // Fetching courses and updating localStorage\n        //fetchCourses()\n        fetchReviews(course_id)\n\n        // Timeout so we have data before rerendering parent component\n        setTimeout(() => {\n\n            setMessage('Review added!')\n        }, 5000)\n        return true\n    }\n    return false\n}\n\n\n\nconst CreateReview = (props) => {\n\n    // State variables that are changed when form gets input\n    const [author, setAuthor] = useState('Anon')\n    const [title, setTitle] = useState('')\n    const [body, setBody] = useState('')\n    const [rating, setRating] = useState(0)\n    const course_id = props.course.id\n\n    return (\n        <div className='create-review'>\n            <form id='createreview' onSubmit={(e) => { \n                if (handleSubmit(e, course_id, author, title, body, rating, props.updateMessage)) {\n                    // Resetting form inputs\n                    setAuthor('Anon')\n                    setTitle('')\n                    setBody('')\n                    setRating(0)\n                }\n            }}>\n                \n                <input type='text' name='author' placeholder='name' value={author} onChange={(e) => setAuthor(e.target.value)}/>\n                <input type='text' name='title' placeholder='title (required)' value={title} onChange={(e) => setTitle(e.target.value)} />\n                <input type='text' name='body' placeholder='review (required)' value={body} onChange={(e) => setBody(e.target.value)} />\n                <select value={rating} onChange={(e) => setRating(e.target.value)}>\n                    <option>0</option>\n                    <option>1</option>\n                    <option>2</option>\n                    <option>3</option>\n                    <option>4</option>\n                    <option>5</option>\n                </select>\n                <input type='submit' value='Submit' />\n            </form>\n        </div>\n    );\n}\n\nexport default CreateReview;\n","// Component for each course\n// Will also have components:\n\nimport { useLocation, Link } from \"react-router-dom\";\nimport { useState } from 'react'\nimport './App.css'\nimport getCourses from './getCourses.js'\nimport postReview from './postReview.js'\nimport ReviewCard from './ReviewCard.js'\nimport CreateReview from './CreateReview.js'\nimport fetchCourses from './fetchCourses.js'\n\nlet RenderReviews = (props) => {\n\n    // Getting courses object from localStorage\n    const courses = JSON.parse(window.localStorage.getItem('courses'))\n    const reviews = courses[props.loc]['reviews']\n\n    // Making sure that a course has at least 1 review, otherwise\n    // displays this message\n    if (!reviews) {\n        return (\n            <div>\n                Course has no reviews.\n            </div>\n        )\n    }\n\n    // Turning object with reviews, into list of reviews\n    const reviewsList = Object.keys(reviews).map((id) => {\n       return reviews[id]\n    })\n    \n    return (\n        <div className=\"reviews\">\n            <div>{props.message}</div>\n            <h1>Reviews:</h1>\n            {reviewsList.map((review) => {\n                return <ReviewCard key={review.id} review={review} />\n            })}\n        </div>\n    )\n}\n\nlet CoursePage = (props) => {\n\n    // This allows us to rerender dom from child component\n    const [message, setMessage] = useState('')\n\n    // Getting the course_id from url\n    const location = useLocation()\n    const url_param = location.pathname.split('/')[location.pathname.split('/').length - 1]\n\n    // Checking that the localStorage has courses\n    if (window.localStorage.getItem('courses') === null) {\n        return (<div>Something went wrong</div>)\n    } \n\n    // Getting courses from local storage\n    const courses = JSON.parse(window.localStorage.getItem('courses'))\n    const current_course = courses[url_param]\n\n    return (\n        <div className=\"course-page\">\n            <Link className=\"login\" to='/cs97-project/login'>Login</Link>\n            <Link className=\"home-button\" to='/cs97-project/'>Home</Link>\n            <div className = 'title'>Title: {current_course['title']}</div>\n            <div className = 'author'>Author: {current_course['author']}</div>\n            <div className = 'rating'>Rating: {current_course['course_rating']}</div>\n            <div> Submit a review:\n                <CreateReview course={current_course} updateMessage={setMessage} />\n            </div>\n            <div className='review-cards'>\n                <RenderReviews loc={url_param} message={message} />\n            </div>\n        </div>\n    );\n}\n\nexport default CoursePage;\n","// Button that appears on CoursePage that adds a static course to the db\n\nimport './App.css'\nimport axios from 'axios'\n\nlet add = () => {\n    axios.get('/api/addcourse')\n}\n\nconst AddCourse = () => {\n    return (\n        <div>\n            <button onClick={() => add()}>add course</button>\n        </div>\n    );\n}\n\nexport default AddCourse;\n","import axios from 'axios'\n\nconst loginPost = async (username, password) => {\n\n    const data = {\n        'username': username,\n        'hash': password\n    }\n\n    const json = JSON.stringify(data)\n\n    const p = await axios.post('/login', json, { headers: { 'Content-Type': 'application/json' }}) \n        .then((res) => {\n            console.log(res.status)\n            if (res.status == 200) {\n                window.localStorage.setItem('isAuthenticated', true)\n                window.localStorage.setItem('username', username)\n                window.location.replace('/cs97-project')\n            }\n        })\n        .catch(err => {\n            console.log(err.response.data)\n            window.alert('Incorrect username or password.')\n        })\n}\n\nexport default loginPost\n","import './App.css'\nimport './login.css'\nimport { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport sha256 from 'js-sha256'\nimport loginPost from './loginPost.js'\n\nconst handleSubmit = (e, username, password) => {\n    e.preventDefault()\n\n    if (username.length <= 0) {\n        alert('No username')\n    } else if (password.length <= 0) {\n        alert('No password')\n    } else {\n        loginPost(username, sha256(password))\n    }\n}\n\nconst Login = () => {\n    \n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n\n\n    return (\n        <div className=\"login-page\">\n            <form id='login' onSubmit={(e) => {\n                handleSubmit(e, username, password)\n                setPassword('')\n            }}>\n                <div className='login-inputs'>\n                    <input className='username' type='text' name='username' placeholder='username' value={username} onChange={(e) => setUsername(e.target.value)}/>\n                    <input id='password' className='password' type='text' name='password' placeholder='password' value={'*'.repeat(password.length)} onChange={(e) => setPassword(e.target.value) }/>\n                </div>\n                <div className='login-button-wrapper'>\n                    <div className='hello'>Welcome back, <span className='hello-name'>{username}</span></div>\n                    <input className='login-button' type='submit' value='login' />\n                    <div className='login-extra-buttons'>\n                        <Link className=\"signup\" to='/cs97-project/signup'>or sign up</Link>\n                        <Link className=\"home-button\" to='/cs97-project/'>Home</Link>\n                    </div>\n                </div>\n            </form>\n        </div>\n    );\n}\n\nexport default Login;\n","import axios from 'axios'\n\nconst checkUser = async (username) => {\n\n    const data = {\n        'username': username\n    }\n\n    const json = JSON.stringify(data)\n\n    const p = await axios.get('/checkuser/' + username) \n        .then((res) => {\n            console.log(res.status)\n            return res\n        })\n        .catch(err => {\n            console.log(err.response.data)\n            window.alert('Post failed. Server is probably down. ' + err)\n        })\n    return p\n}\n\nexport default checkUser\n","import axios from 'axios'\n\nconst addUser = async (username, password) => {\n\n    const data = {\n        'username': username,\n        'hash': password\n    }\n\n    const json = JSON.stringify(data)\n\n    const p = await axios.post('/signup', json, { headers: { 'Content-Type': 'application/json' }}) \n        .then((res) => {\n            console.log(res.status)\n            if (res.status == 200) {\n                window.location.replace('/cs97-project/login')\n            }\n        })\n        .catch(err => {\n            console.log(err.response.data)\n            window.alert('Post failed. Server is probably down. ' + err)\n        })\n}\n\nexport default addUser\n","import './App.css'\nimport './login.css'\nimport { useState, useEffect } from 'react'\nimport sha256 from 'js-sha256'\nimport checkUser from './checkUser.js'\nimport addUser from './addUser.js'\nimport { Link } from 'react-router-dom'\n\nconst handleSubmit = (e, username, password) => {\n    e.preventDefault()\n\n    if (username.length <= 0) {\n        alert('No username')\n    } else if (password.length <= 0) {\n        alert('No password')\n    } else {\n\n        const grabCourses = async (username) => {\n            const data = await checkUser(username);\n\n            if (!data.data) {\n                addUser(username, sha256(password))\n            } else {\n                alert('User already exists')\n            }\n        }\n        grabCourses(username)\n    }\n}\n\nconst Signup = () => {\n    \n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n\n    let test = (password.length).toString() + (password.length).toString()\n    let color = '#11' + test + '11'\n\n    if (password.length > 0 && password.length < 10) {\n        document.getElementById('lower-bg').style.backgroundColor = color\n        document.getElementById('password').style.borderColor = color\n    }\n\n    return (\n        <div className=\"signup-page\">\n            <form id='signup' onSubmit={(e) => {\n                handleSubmit(e, username, password)\n                setPassword('')\n            }}>\n            <div className='login-inputs'>\n                <input id='username' className='username' type='text' name='username' placeholder='new username' value={username} onChange={(e) => setUsername(e.target.value)}/>\n                <input id='password' className='password' ype='text' name='password' placeholder='new password' value={'*'.repeat(password.length)} onChange={(e) => setPassword(e.target.value) }/>\n            </div>\n            <div id='lower-bg' className='login-button-wrapper'>\n                <div className='hello'>Welcome, <span className='hello-name'>{username}</span></div>\n                <input className='login-button' type='submit' value='sign up' />\n                <div className='login-extra-buttons'>\n                    <Link className=\"login\" to='/cs97-project/login'>or login</Link>\n                    <Link className=\"home-button\" to='/cs97-project/'>Home</Link>\n                </div>\n            </div>\n            </form>\n        </div>\n    );\n}\n\nexport default Signup\n\n\n\n","// Component for routing. Renders components based on given path.\n\n\nimport React from 'react';\nimport App from './App.js';\nimport CoursePage from './CoursePage.js';\nimport AddCourse from './AddCourse.js';\nimport Login from './Login.js';\nimport Signup from './Signup.js';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from 'react-router-dom';\n\nlet MainRouter = () => {\n\n    return (\n        <div className=\"Router\">\n            <Router>\n                <Switch>\n                    <Route exact path='/cs97-project/' component={ App } />\n                    <Route exact path='/cs97-project/course/:id' component={ CoursePage } />\n                    <Route exact path='/cs97-project/addcourse' component={ AddCourse } />\n                    <Route exact path='/cs97-project/login' component={ Login } />\n                    <Route exact path='/cs97-project/signup' component={ Signup } />\n                </Switch>\n            </Router>\n        </div>\n    );\n}\n\nexport default MainRouter;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Router from './Router.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}