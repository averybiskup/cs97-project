{"version":3,"sources":["CourseCard.js","CourseRenderer.js","getCourses.js","fetchCourses.js","App.js","CoursePage.js","AddCourse.js","Router.js","reportWebVitals.js","index.js"],"names":["CourseCard","props","path_to_course","course_id","className","name","to","CourseRenderer","useState","query","setQuery","coursesObj","courses","filteredCourses","search","JsSearch","addIndex","addDocuments","result","filter","course","includes","filterCourses","Object","keys","map","id","type","placeholder","onChange","e","target","value","title","getCourses","console","log","fetchCourses","a","process","SERVER_KEY","axios","get","then","res","status","data","App","isLoading","setLoading","setCourses","useEffect","fetch","length","CoursePage","location","useLocation","URLparam","pathname","split","AddCourse","onClick","MainRouter","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","Router","document","getElementById"],"mappings":"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","file":"static/js/main.0476b0b0.chunk.js","sourcesContent":["// Cards that show up on main page.\n// Should contain:\n// Name of Course\n// Author of Course (maybe)\n// Course Image\n// Link to the course page\n\nimport { useLocation, Link } from \"react-router-dom\";\nimport './App.css'\n\nlet CourseCard = (props) => {\n    const path_to_course = \"/cs97-project/course/\" + props.course_id\n    return (\n        <div className=\"course-card\">\n                <div>{props.name}</div>\n                <div>COURSE IMAGE</div>\n                <Link to={path_to_course} >Course Page</Link>\n        </div>\n    );\n}\n\nexport default CourseCard;\n","// Component for rendering the cards on the main page.\n// Also contains the code for the search bar\n// Uses js-search which is for searching for matches in a list of objects\n\n\nimport {useState} from 'react';\nimport CourseCard from './CourseCard.js'\nimport * as JsSearch from 'js-search'\n\n// Returns all objects in the courses list that match the query\n//                     array  , string\nconst filterCourses = (courses, query) => {\n\n    // Makes sure query isn't empty\n    if (!query)\n        return courses\n\n    // Creating search\n    var search = new JsSearch.Search('id')\n    search.addIndex('title')\n    search.addIndex('tags')\n\n    search.addDocuments(courses)\n    const result = search.search(query)\n\n    // Returning courses that match the search\n    return courses.filter((course) => {\n        return result.includes(course); \n    })\n};\n\n\n\nconst CourseRenderer = (props) => {\n    const [query, setQuery] = useState('');\n    const coursesObj = props.courses\n    const courses = Object.keys(coursesObj).map((id) => {\n       return coursesObj[id]\n    })\n\n    const filteredCourses = filterCourses(courses, query)\n    \n    return (\n        <div>\n            <input type=\"text\" id=\"course-search\" placeholder=\"search\" name=\"s\" onChange={e => setQuery(e.target.value)}/>\n            \n            {filteredCourses.map(course => (\n                 <CourseCard key={course.id} name={course.title} course_id={course.id} />\n            ))}\n\n        </div>\n    )\n}\nexport default CourseRenderer\n","// Function for getting courses, later this will fetch from server\n\nconst getCourses = () => {\n\n    let courses = {\n        '0': { \n        'id': 0,\n        'title': 'React Native',\n        'author': 'Joe',\n        'tags': ['React', 'React Native']\n        }, \n        '1': {\n        'id': 1,\n        'title': 'Python',\n        'author': 'Spud',\n        'tags': ['Python']\n        }, \n        '2': {\n        'id': 2,\n        'title': 'Node.js',\n        'author': 'Natalie',\n        'tags': ['Node', 'Node.js', 'Javascript']\n        }\n    }\n    console.log('test')\n    return courses\n}\nexport default getCourses\n","// Fetching data from the server\n\nimport axios from 'axios'\nimport getCourses from './getCourses.js'\n\nconst fetchCourses = async () => {\n    const key = process.env.SERVER_KEY\n\n\n    // We can use /api/test because we have a proxy in package.json which\n    // points to the server address (localhost:8000)\n    const data = await axios.get('/api/getcourses')\n        \n        .then(res => {\n            if (res.status == 200) {\n                return res.data\n            } else {\n                return getCourses()\n            }\n        })\n    console.log('test')\n    return getCourses()\n\n}\n\nexport default fetchCourses\n","// Component for the home page of the app\n\nimport './App.css';\nimport CourseRenderer from './CourseRenderer'\nimport getCourses from './getCourses.js'\nimport fetchCourses from './fetchCourses.js'\nimport { useState, useEffect } from 'react'\n\nconst App = () => {\n    const [isLoading, setLoading] = useState(true);\n    const [courses, setCourses] = useState({});\n\n    // Getting data from fetchCourse function\n    useEffect(() => {\n        const fetch = async () => {\n            const data = await fetchCourses()\n            setCourses(data)\n        }\n        fetch()\n        setLoading(false)\n    }, [])\n\n    // Render a loading div to show before data has arrived \n    if (isLoading) {\n        return <div>Loading Courses...</div>\n    }\n    if (Object.keys(courses).length == 0) {\n        setCourses(getCourses())\n        return <div>No Courses Loaded... Server is likely down.</div>\n    }\n\n    return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <CourseRenderer courses={courses} />\n          </header>\n        </div>\n    );\n}\n\nexport default App;\n","// Component for each course\n// Will also have components:\n// StarRating\n// Reviews\n\nimport { useLocation, Link } from \"react-router-dom\";\nimport './App.css'\nimport getCourses from './getCourses.js'\n\nlet CoursePage = () => {\n    // This gets whaetever is being the last / in the current url\n    const location = useLocation()\n    const URLparam = location.pathname.split('/')[location.pathname.split('/').length - 1]\n\n    return (\n        <div className=\"course-page\">\n                <Link className=\"home-button\" to='/cs97-project/'>Home</Link>\n                <div>\n                    This is course: {URLparam}\n                </div>\n        </div>\n    );\n}\n\nexport default CoursePage;\n","import './App.css'\nimport axios from 'axios'\n\nlet add = () => {\n    axios.get('/api/addcourse')\n}\n\nconst AddCourse = () => {\n    \n    return (\n        <div className=\"course-page\">\n                <div>\n                    <button onClick={() => add()}>add course</button>\n                </div>\n        </div>\n    );\n}\n\nexport default AddCourse;\n","// Component for routing. Renders components based on given path.\n\n\nimport React from 'react';\nimport App from './App.js';\nimport CoursePage from './CoursePage.js';\nimport AddCourse from './AddCourse.js';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from 'react-router-dom';\n\nlet MainRouter = () => {\n\n    return (\n        <div className=\"Router\">\n            <Router>\n                <Switch>\n                    <Route exact path='/cs97-project/' component={ App } />\n                    <Route exact path='/cs97-project/course/:id' component={ CoursePage } />\n                    <Route exact path='/cs97-project/addcourse' component={ AddCourse } />\n                </Switch>\n            </Router>\n        </div>\n    );\n}\n\nexport default MainRouter;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Router from './Router.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}